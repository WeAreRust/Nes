//! # Colour Palette
//!
//! From: Loopy, “NES Palette”, NesDev, http://nesdev.parodius.com/pal.txt
//!
//! http://nesdev.com/NESDoc.pdf (page 45)
//!
//! Maps a colour palette entry to an RGB value.

static PALETTE: &'static [(u8, u8, u8)] = &[
    // 0x00
    (0x75, 0x75, 0x75),
    (0x27, 0x1B, 0x8F),
    (0x00, 0x00, 0x00),
    (0x47, 0x00, 0x9F),
    (0x8F, 0x00, 0x77),
    (0xAB, 0x00, 0x13),
    (0xA7, 0x00, 0x00),
    (0x7F, 0x0B, 0x00),
    (0x43, 0x2F, 0x00),
    (0x00, 0x47, 0x00),
    // 0A
    (0x00, 0x51, 0x00),
    (0x00, 0x3F, 0x17),
    (0x1B, 0x3F, 0x5F),
    (0x00, 0x00, 0x00),
    (0x00, 0x00, 0x00),
    (0x00, 0x00, 0x00),
    // 10
    (0xBC, 0xBC, 0xBC),
    (0x00, 0x73, 0xEF),
    (0x23, 0x3B, 0xEF),
    (0x83, 0x00, 0xF3),
    (0xBF, 0x00, 0xBF),
    (0xE7, 0x00, 0x5B),
    (0xDB, 0x2B, 0x00),
    (0xCB, 0x4F, 0x0F),
    (0x8B, 0x73, 0x00),
    (0x00, 0x97, 0x00),
    // 1A
    (0x00, 0xAB, 0x00),
    // TODO: 1B - 3F
];

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn palette_contains_green() {
        assert!(PALETTE[0x1A] == (0x00, 0xAB, 0x00));
    }
}
